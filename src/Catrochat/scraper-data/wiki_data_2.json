{
    "/bin/view/Documentation/": {
        "/bin/view/Documentation/BrickDocumentation/": {
            "/bin/view/XWiki/admin": {
                "/bin/view/XWiki/admin": {}
            },
            "/bin/view/Documentation/BrickDocumentation/Event-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/WhenStartedBrick/": {
                    "text": "WhenStartedBrick: If you use this block, the script will start immediately when the scene starts. A scene is the beginning of your program. A scene is a new view in your program in which other elements can be displayed and different interactions can take place. You can have many scenes for different phases in your program. For example one scene for the intro, one scene for the main menu, one for the first level, one for the second level and so on. With simpler programs, a single scene can also suffice, then the beginning of your program is also the beginning of the scene (as in our small example below)."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenBrick/": {
                    "text": "WhenBrick: Runs the script when the object is tapped."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenTouchDownBrick/": {
                    "text": "WhenTouchDownBrick: Runs the script when the screen is touched."
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastReceiverBrick/": {
                    "text": "BroadcastReceiverBrick: With this block your object listens for a specific broadcast message and then runs the script when the message is received. Useful to communicate between objects and tell them when to do something."
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastBrick/": {
                    "text": "BroadcastBrick: Sends a specified message to all objects and the background. Useful to communicate between objects and tell them when to do something."
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastWaitBrick/": {
                    "text": "BroadcastWaitBrick: Sends a specified message to all objects and the background. The object that sends the message waits until all objects, that received the message, have finished their scripts. Then the initial script continues."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenConditionBrick/": {
                    "text": "WhenConditionBrick: Waits until the specified value or function becomes true and then runs the script."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenBounceOffBrick/": {
                    "text": "WhenBounceOffBrick: Runs the script when the object collides physically with another object. Other objects motion types will have to be set to physical."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenBackgroundChangesBrick/": {
                    "text": "WhenBackgroundChangesBrick: Runs the script when background changes to a certain background. Needs more than one background."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenClonedBrick/": {
                    "text": "WhenClonedBrick: Tells a created clone of an object what to do."
                },
                "/bin/view/Documentation/BrickDocumentation/CloneBrick/": {
                    "text": "CloneBrick: Creates a clone (temporary duplicate) of the specified object with all its attributes up to the point that the brick was activated. It can clone itself or other objects."
                },
                "/bin/view/Documentation/BrickDocumentation/DeleteThisCloneBrick/": {
                    "text": "DeleteThisCloneBrick: Deletes the current clone"
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Control-Bricks/": {
                "/bin/view/XWiki/admin": {},
                "/bin/view/Documentation/BrickDocumentation/WaitBrick/": {
                    "text": "WaitBrick: This block pauses the script for the specified amount of time and then continues with the next block.."
                },
                "/bin/view/Documentation/BrickDocumentation/NoteBrick/": {
                    "text": "NoteBrick: Makes a note for programming issues. Does not have any relevance for the script\u2019s execution."
                },
                "/bin/view/Documentation/BrickDocumentation/ForeverBrick/": {
                    "text": "ForeverBrick: Creates a loop. All bricks between \u201cForever\u201d and \u201cEnd of loop\u201d will be repeated forever."
                },
                "/bin/view/Documentation/BrickDocumentation/IfThenLogicBrick/": {
                    "text": "IfThenLogicBrick: Creates an if-else-query. If a specified events happen, it will continue the script there, otherwise beneath the else-brick."
                },
                "/bin/view/Documentation/BrickDocumentation/IfLogicBrick/": {
                    "text": "IfLogicBrick: Creates an if-query without an else. If an event happens, the bricks between the \u201cif\u201d and the \u201cend if\u201d will be activated."
                },
                "/bin/view/Documentation/BrickDocumentation/WaitUntilBrick/": {
                    "text": "WaitUntilBrick: Lets the script wait until a specified value is true, then continues with the next brick."
                },
                "/bin/view/Documentation/BrickDocumentation/RepeatBrick/": {
                    "text": "RepeatBrick: Creates a loop and repeats the bricks within the loop a specified amount of times."
                },
                "/bin/view/Documentation/BrickDocumentation/RepeatUntilBrick/": {
                    "text": "RepeatUntilBrick: Creates a loop. Will repeat its loop until a specified value becomes true and then continues with the next brick."
                },
                "/bin/view/Documentation/BrickDocumentation/ForVariableFromToBrick/": {
                    "text": "ForVariableFromToBrick: Represents a for-loop. Repeats for every integer from a\u00a0specified value to another specified value.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/ForItemInUserListBrick/": {
                    "text": "ForItemInUserListBrick: Represents a for-each-loop. Will iterate through the specified list by saving each item in the specified variable. The loop iterates from the first item in the list to the last.\u00a0E.g. if the list contains two items: {'Hello', 'World'}, in the first iteration the variable will contain 'Hello' and in the second 'World'."
                },
                "/bin/view/Documentation/BrickDocumentation/ContinueSceneBrick/": {
                    "text": "ContinueSceneBrick: Continues a scene that already has started. Requires at least two scenes. Script will continue at the point it left the scene."
                },
                "/bin/view/Documentation/BrickDocumentation/SceneStartBrick/": {
                    "text": "SceneStartBrick: Starts a new scene. Requires at least two scenes in the program. A scene is a sort of mini-program within the program. It provides all objects and scripts from scratch. Variables can have the scope to be seen in every scene."
                },
                "/bin/view/Documentation/BrickDocumentation/ExitStageBrick/": {
                    "text": "ExitStageBrick: Exits the program and continues the workflow in the programing view."
                },
                "/bin/view/Documentation/BrickDocumentation/StopScriptBrick/": {
                    "text": "StopScriptBrick: Stops either this script, all scripts or other scripts of the object."
                },
                "/bin/view/Documentation/BrickDocumentation/WaitTillIdleBrick/": {
                    "text": "WaitTillIdleBrick: Let\u2019s the script wait until all other scripts have stopped. This includes all script from all other objects. Scripts can be stopped through the stop\u00a0brick or when terminated by lack of further operations.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/WhenClonedBrick/": {
                    "text": "WhenClonedBrick: Tells a created clone of an object what to do."
                },
                "/bin/view/Documentation/BrickDocumentation/CloneBrick/": {
                    "text": "CloneBrick: Creates a clone (temporary duplicate) of the specified object with all its attributes up to the point that the brick was activated. It can clone itself or other objects."
                },
                "/bin/view/Documentation/BrickDocumentation/DeleteThisCloneBrick/": {
                    "text": "DeleteThisCloneBrick: Deletes the current clone"
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastReceiverBrick/": {
                    "text": "BroadcastReceiverBrick: With this block your object listens for a specific broadcast message and then runs the script when the message is received. Useful to communicate between objects and tell them when to do something."
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastBrick/": {
                    "text": "BroadcastBrick: Sends a specified message to all objects and the background. Useful to communicate between objects and tell them when to do something."
                },
                "/bin/view/Documentation/BrickDocumentation/BroadcastWaitBrick/": {
                    "text": "BroadcastWaitBrick: Sends a specified message to all objects and the background. The object that sends the message waits until all objects, that received the message, have finished their scripts. Then the initial script continues."
                },
                "/bin/view/Documentation/BrickDocumentation/TapAtBrick/": {
                    "text": "TapAtBrick: Simulates a single tap at a specified position of the touchscreen. This brick basically simulates your finger."
                },
                "/bin/view/Documentation/BrickDocumentation/TapForBrick/": {
                    "text": "TapForBrick: Simulates a touch at a specified position for a specified amount of time at your touchscreen. This brick basically simulates your finger and can be used for longer touches."
                },
                "/bin/view/Documentation/BrickDocumentation/TouchAndSlideFromTo/": {
                    "text": "TouchAndSlideFromTo: Simulates a touch on the screen. The touch moves in the given time from the first position to the second position. This block simulates your finger and can be used for swipes of various length."
                },
                "/bin/view/Documentation/BrickDocumentation/OpenInBrowser/": {
                    "text": "OpenInBrowser: Opens the provided URL in the browser of the device."
                },
                "#": {
                    "text": "#: Made by Catrobaters, for Catrobaters."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Motion-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/PlaceAtBrick/": {
                    "text": "PlaceAtBrick: Places an object at the specified coordinates. You can choose each coordinate individually."
                },
                "/bin/view/Documentation/BrickDocumentation/SetXBrick/": {
                    "text": "SetXBrick: Sets the x-coordinate of an object to a specified value. By default objects will be placed at x: 0 and x: 0, which is the center of your screen."
                },
                "/bin/view/Documentation/BrickDocumentation/SetYBrick/": {
                    "text": "SetYBrick: Sets the y-coordinate of an object to a specified value. By default objects will be placed at x: 0 and y: 0, which is the center of your device."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeXByNBrick/": {
                    "text": "ChangeXByNBrick: Changes the x-coordinate of an object by a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeYByNBrick/": {
                    "text": "ChangeYByNBrick: Changes the y-coordinate of an object by a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/GoToBrick/": {
                    "text": "GoToBrick: The object will be placed either at the touch position, a random position or the position of a different\u00a0object."
                },
                "/bin/view/Documentation/BrickDocumentation/IfOnEdgeBounceBrick/": {
                    "text": "IfOnEdgeBounceBrick: Lets the object bounce if it touches an edge. To constantly bounce, use the Forever-brick in addition."
                },
                "/bin/view/Documentation/BrickDocumentation/MoveNStepsBrick/": {
                    "text": "MoveNStepsBrick: The object moves specified steps (which are pixels on the screen) parallel to the X-coordinate. Negative values will let the object move to the left, positive ones to the right."
                },
                "/bin/view/Documentation/BrickDocumentation/TurnLeftBrick/": {
                    "text": "TurnLeftBrick: Turn the object to the left by a specified value of degrees."
                },
                "/bin/view/Documentation/BrickDocumentation/TurnRightBrick/": {
                    "text": "TurnRightBrick: Turn the object to the left by a specified value of degrees."
                },
                "/bin/view/Documentation/BrickDocumentation/PointInDirectionBrick/": {
                    "text": "PointInDirectionBrick: Lets the object point in a specified direction."
                },
                "/bin/view/Documentation/BrickDocumentation/PointToBrick/": {
                    "text": "PointToBrick: Lets the object point towards another object. At least two objects are necessary."
                },
                "/bin/view/Documentation/BrickDocumentation/SetRotationStyleBrick/": {
                    "text": "SetRotationStyleBrick: Will change the objects rotation style to either left-right only, all-around or don\u2019t rotate. By default the object will rotate all-around."
                },
                "/bin/view/Documentation/BrickDocumentation/GlideToBrick/": {
                    "text": "GlideToBrick: Lets the object glide to a specified place within a specified time. More seconds will result into a slower gliding."
                },
                "/bin/view/Documentation/BrickDocumentation/GoBackLayerBrick/": {
                    "text": "GoBackLayerBrick: Puts an object back a specified layer. It will appear behind other objects and will be visible through transparent objects."
                },
                "/bin/view/Documentation/BrickDocumentation/ComeToFrontBrick/": {
                    "text": "ComeToFrontBrick: Will take the object to the front of the screen. All other objects will appear behind it."
                },
                "/bin/view/Documentation/BrickDocumentation/VibrationBrick/": {
                    "text": "VibrationBrick: Lets the phone vibrate for a specified time."
                },
                "/bin/view/Documentation/BrickDocumentation/SetPhysicsObjectTypeBrick/": {
                    "text": "SetPhysicsObjectTypeBrick: Sets the object\u2019s motion type to a specified behaviour:\u00a0moving and bouncing under gravity / not moving under gravity, but others bounce off... / not moving or bouncing under gravity (default)"
                },
                "/bin/view/Documentation/BrickDocumentation/WhenBounceOffBrick/": {
                    "text": "WhenBounceOffBrick: Runs the script when the object collides physically with another object. Other objects motion types will have to be set to physical."
                },
                "/bin/view/Documentation/BrickDocumentation/SetVelocityBrick/": {
                    "text": "SetVelocityBrick: Sets the velocity of the object measured in steps/second. You can choose the direction by adjusting the coordinates."
                },
                "/bin/view/Documentation/BrickDocumentation/TurnLeftSpeedBrick/": {
                    "text": "TurnLeftSpeedBrick: Lets the object spin left in with the specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/TurnRightSpeedBrick/": {
                    "text": "TurnRightSpeedBrick: Lets the object spin right\u00a0with the specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/SetGravityBrick/": {
                    "text": "SetGravityBrick: Sets the gravity of the object to a specified value. The object will react like physical object."
                },
                "/bin/view/Documentation/BrickDocumentation/SetMassBrick/": {
                    "text": "SetMassBrick: Sets the object\u2019s mass to a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBounceBrick/": {
                    "text": "SetBounceBrick: Sets the bounce factor of the object to a specified value. If the bounce factor is 100%, the object will lose no speed when bouncing."
                },
                "/bin/view/Documentation/BrickDocumentation/SetFrictionBrick/": {
                    "text": "SetFrictionBrick: Sets the friction of the object to a specified value. If the friction is set to 0%, the object will not lose speed by travelling."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Sound-Bricks/": {
                "/bin/view/XWiki/FirstaAnta": {},
                "/bin/view/Documentation/BrickDocumentation/PlaySoundBrick/": {
                    "text": "PlaySoundBrick: Plays a sound and continues with the next brick immediately."
                },
                "/bin/view/Documentation/BrickDocumentation/PlaySoundAndWaitBrick/": {
                    "text": "PlaySoundAndWaitBrick: Plays a sound and waits until it has ended before continuing with the next brick."
                },
                "/bin/view/Documentation/BrickDocumentation/StopSoundBrick/": {
                    "text": "StopSoundBrick: Stops the specified sound."
                },
                "/bin/view/Documentation/BrickDocumentation/StopAllSoundsBrick/": {
                    "text": "StopAllSoundsBrick: Stops all sounds being played on all objects and stages.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/SetVolumeToBrick/": {
                    "text": "SetVolumeToBrick: Sets object\u2019s sound volume to a specified value. You can set the volume level for each object. To play two sounds at the same time with different volume levels, use two objects. Volume is set by default to 100 and ranges between 0 and 100."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeVolumeByNBrick/": {
                    "text": "ChangeVolumeByNBrick: Changes object\u2019s sound volume by a specified amount. You can set the volume level for each object. To play two sounds at the same time with different volume levels, use two objects. Volume is set by default to 100 and ranges between 0 and 100."
                },
                "/bin/view/Documentation/BrickDocumentation/SpeakBrick/": {
                    "text": "SpeakBrick: Speaks a phrase with a computer generated voice and continues with the next brick immediately."
                },
                "/bin/view/Documentation/BrickDocumentation/SpeakAndWaitBrick/": {
                    "text": "SpeakAndWaitBrick: Speaks a phrase with a computer generated voice and waits until it has ended before continuing with the next brick."
                },
                "/bin/view/Documentation/BrickDocumentation/AskSpeechBrick/": {
                    "text": "AskSpeechBrick: Speaks a phrase with a computer generated voice and stores the spoken answer, converted as text, in a variable. Requires an internet connection to convert."
                },
                "/bin/view/Documentation/BrickDocumentation/StartListeningBrick/": {
                    "text": "StartListeningBrick: Starts the voice recognition and stores the recognised words in the specified variable. The recognition will stop automatically if there is nothing spoken anymore."
                },
                "/bin/view/Documentation/BrickDocumentation/SetListeningLanguageBrick/": {
                    "text": "SetListeningLanguageBrick: Sets the listening voice to a specified language. This ensures that the device understands and can accurately process the specified language. The languages can be chosen from a drop-down menu. The system will then recognise spoken words in this language."
                },
                "/bin/view/Documentation/BrickDocumentation/SetInstrumentBrick/": {
                    "text": "SetInstrumentBrick: This brick changes the instrument to the specified instrument. After using this brick, all notes are played with this instrument."
                },
                "/bin/view/Documentation/BrickDocumentation/PlayNoteForBeats/": {
                    "text": "PlayNoteForBeats: This brick plays the specified note for the specified ammount of beats. The duration of a beat depends on the tempo."
                },
                "/bin/view/Documentation/BrickDocumentation/PlayDrumForBeats/": {
                    "text": "PlayDrumForBeats: Plays the specified drum for the specified ammount of beats. The duration of a beat depends on the tempo."
                },
                "/bin/view/Documentation/BrickDocumentation/SetTempoBrick/": {
                    "text": "SetTempoBrick: This brick sets the tempo of the notes played. A higher tempo correlates to a the notes beeing played faster."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeTempo/": {
                    "text": "ChangeTempo: This brick changes the current tempo by the specified ammount."
                },
                "/bin/view/Documentation/BrickDocumentation/PauseForBeatsBrick/": {
                    "text": "PauseForBeatsBrick: This brick is similar to the \"Wait-for-seconds\"-brick. He blocks the current sound for the specified ammount of beats. The duration of a beat depends on the tempo."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Look-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/SetLookBrick/": {
                    "text": "SetLookBrick: Changes the look of an object to a specified one. The object needs more than one look."
                },
                "/bin/view/Documentation/BrickDocumentation/SetLookByIndexBrick/": {
                    "text": "SetLookByIndexBrick: Changes the look of an object to a specified look using its number. The object needs more than one look. Looks are sorted from top to bottom as they appear in the looks-list. If you change the order of the looks, the numbers will change and the brick will show a different look."
                },
                "/bin/view/Documentation/BrickDocumentation/NextLookBrick/": {
                    "text": "NextLookBrick: Switches to the next look in the object\u2019s look list (this can also be the background). The object needs more than one look."
                },
                "/bin/view/Documentation/BrickDocumentation/PreviousLookBrick/": {
                    "text": "PreviousLookBrick: Switches to the previous look in the object\u2019s look list (this can also be the background). The object needs more than one look."
                },
                "/bin/view/Documentation/BrickDocumentation/SetSizeToBrick/": {
                    "text": "SetSizeToBrick: Sets the object\u2019s size to a specified percent size of the original size."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeSizeByNBrick/": {
                    "text": "ChangeSizeByNBrick: Changes the object\u2019s size by a specified amount."
                },
                "/bin/view/Documentation/BrickDocumentation/HideBrick/": {
                    "text": "HideBrick: Lets an object disappear from screen. When an object is hidden, other objects cannot detect it with touching-bricks."
                },
                "/bin/view/Documentation/BrickDocumentation/ShowBrick/": {
                    "text": "ShowBrick: Lets an object appear on screen after it was hidden. By default all objects are shown."
                },
                "/bin/view/Documentation/BrickDocumentation/AskBrick/": {
                    "text": "AskBrick: Asks a question within a dialog and stores the answer in a variable."
                },
                "/bin/view/Documentation/BrickDocumentation/SayBubbleBrick/": {
                    "text": "SayBubbleBrick: Says words in a speech bubble like this: "
                },
                "/bin/view/Documentation/BrickDocumentation/SayForBubbleBrick/": {
                    "text": "SayForBubbleBrick: Says words in a speech bubble for a specified amount of time. This is how the bubble looks like: "
                },
                "/bin/view/Documentation/BrickDocumentation/ThinkBubbleBrick/": {
                    "text": "ThinkBubbleBrick: Displays text in a thought bubble like this: "
                },
                "/bin/view/Documentation/BrickDocumentation/ThinkForBubbleBrick/": {
                    "text": "ThinkForBubbleBrick: Displays words in a thought bubble for a specified amount of time. This is how the bubble looks like: "
                },
                "/bin/view/Documentation/BrickDocumentation/ShowTextBrick/": {
                    "text": "ShowTextBrick: Shows a variable at a specified position."
                },
                "/bin/view/Documentation/BrickDocumentation/ShowTextColorSizeAlignmentBrick/": {
                    "text": "ShowTextColorSizeAlignmentBrick: Shows a variable at a specified position, size, color and alignment.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/SetTransparencyBrick/": {
                    "text": "SetTransparencyBrick: Sets the object\u2019s transparency to a specified value between 0 and 100%, whereby 100% means the object is completely transparent."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeTransparencyByNBrick/": {
                    "text": "ChangeTransparencyByNBrick: Changes the object\u2019s transparency by a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBrightnessBrick/": {
                    "text": "SetBrightnessBrick: Sets the object\u2019s brightness to a specified value.\u00a0\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeBrightnessByNBrick/": {
                    "text": "ChangeBrightnessByNBrick: Changes the object\u2019s brightness by a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/SetColorBrick/": {
                    "text": "SetColorBrick: Sets the color of an object to a specified value. Does not work with grayscale objects."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeColorByNBrick/": {
                    "text": "ChangeColorByNBrick: Changes the color of an object by a specified value. Does not work with grayscale objects."
                },
                "/bin/view/Documentation/BrickDocumentation/ClearGraphicEffectBrick/": {
                    "text": "ClearGraphicEffectBrick: Clears all graphic effects, like brightness, transparency and color, that are currently applied to the object."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenBackgroundChangesBrick/": {
                    "text": "WhenBackgroundChangesBrick: Runs the script when background changes to a certain background. Needs more than one background."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBackgroundBrick/": {
                    "text": "SetBackgroundBrick: Switches the background to a specified background. Requires dedicated backgrounds."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBackgroundByIndexBrick/": {
                    "text": "SetBackgroundByIndexBrick: Switches the background to a specified background using its number. Requires dedicated backgrounds. Backgrounds are sorted from top to bottom as they appear in the backgrounds-list. If you change the order of the backgrounds, the numbers will change and the brick will show a different background."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBackgroundAndWaitBrick/": {
                    "text": "SetBackgroundAndWaitBrick: Sets the background to a specified one and waits until the correlated brick has finished before continuing its own script."
                },
                "/bin/view/Documentation/BrickDocumentation/SetBackgroundByIndexAndWaitBrick/": {
                    "text": "SetBackgroundByIndexAndWaitBrick: Changes the X-coordinate of an object by a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/CameraBrick/": {
                    "text": "CameraBrick: Turns the camera on or off. By default the front camera will be activated. To change the camera, use the correlated brick."
                },
                "/bin/view/Documentation/BrickDocumentation/ChooseCameraBrick/": {
                    "text": "ChooseCameraBrick: Switches the camera to the front or back camera."
                },
                "/bin/view/Documentation/BrickDocumentation/FlashBrick/": {
                    "text": "FlashBrick: Switches the flashlight of the smartphone on or off. Does not work with the front camera."
                },
                "/bin/view/Documentation/BrickDocumentation/LookRequestBrick/": {
                    "text": "LookRequestBrick: Gets an image from a specified URL and uses it as current look for the object. Requires internet connection."
                },
                "/bin/view/Documentation/BrickDocumentation/BackgroundRequestBrick/": {
                    "text": "BackgroundRequestBrick: Gets an image from a specified URL and uses it as current background. Requires internet connection."
                },
                "/bin/view/Documentation/BrickDocumentation/PaintNewLook/": {
                    "text": "PaintNewLook: This brick enables you to create a new Look and add it to the looks of the object."
                },
                "/bin/view/Documentation/BrickDocumentation/EditLook/": {
                    "text": "EditLook: This brick enables you to edit the current look of the object."
                },
                "/bin/view/Documentation/BrickDocumentation/CopyLookAndName/": {
                    "text": "CopyLookAndName: This brick creates a copy of the current look and names it after the provided value."
                },
                "/bin/view/Documentation/BrickDocumentation/DeleteLook/": {
                    "text": "DeleteLook: This brick enables you to delete the current look of the object."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Pen-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/PenDownBrick/": {
                    "text": "PenDownBrick: Puts down object\u2019s pen, so that the object will draw as it moves."
                },
                "/bin/view/Documentation/BrickDocumentation/PenUpBrick/": {
                    "text": "PenUpBrick: Pulls up object\u2019s pen, so it won\u2019t draw as it moves."
                },
                "/bin/view/Documentation/BrickDocumentation/SetPenSizeBrick/": {
                    "text": "SetPenSizeBrick: Sets pen\u2019s thickness to a specified value."
                },
                "/bin/view/Documentation/BrickDocumentation/SetPenColorBrick/": {
                    "text": "SetPenColorBrick: Sets pen\u2019s color, based on choice from RGB color values."
                },
                "/bin/view/Documentation/BrickDocumentation/StampBrick/": {
                    "text": "StampBrick: Stamps the object\u2019s image onto the screen. A stamp is only a temporary image of the object that is drawn on the screen. It can be drawn over or cleared using the clear-brick. A stamp cannot move and cannot hold scripts."
                },
                "/bin/view/Documentation/BrickDocumentation/ClearBackgroundBrick/": {
                    "text": "ClearBackgroundBrick: Clears all pen marks and stamps from the screen."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Data-Bricks/": {
                "/bin/view/XWiki/Riza%20oZ": {},
                "/bin/view/Documentation/BrickDocumentation/SetVariableBrick/": {
                    "text": "SetVariableBrick: Sets a variable to a specified amount. By default, variables will be set to 0 when starting a program."
                },
                "/bin/view/Documentation/BrickDocumentation/ChangeVariableBrick/": {
                    "text": "ChangeVariableBrick: Changes a variable by specified amount."
                },
                "/bin/view/Documentation/BrickDocumentation/ShowTextBrick/": {
                    "text": "ShowTextBrick: Shows a variable at a specified position."
                },
                "/bin/view/Documentation/BrickDocumentation/ShowTextColorSizeAlignmentBrick/": {
                    "text": "ShowTextColorSizeAlignmentBrick: Shows a variable at a specified position, size, color and alignment.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/HideVariable/": {
                    "text": "HideVariable: Hides a variable. Only works if the variable was shown before."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteVariableOnDeviceBrick/": {
                    "text": "WriteVariableOnDeviceBrick: Stores the specified variable on the devices storage. This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/ReadVariableFromDeviceBrick/": {
                    "text": "ReadVariableFromDeviceBrick: Reads a specified variable\u00a0from the devices storage. This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteVariableToFileBrick/": {
                    "text": "WriteVariableToFileBrick: Writes a specified variable to a specified file.\u00a0This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled. Only a single variable can be read from each file. You can find the file in the Catrobat root directory."
                },
                "/bin/view/Documentation/BrickDocumentation/ReadVariableFromFileBrick/": {
                    "text": "ReadVariableFromFileBrick: Reads a specified variable from a specified file and either keeps or deletes the file.\u00a0This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled. Only a single variable can be read from each file. You can find the file in the Catrobat root directory."
                },
                "/bin/view/Documentation/BrickDocumentation/AddItemToUserListBrick/": {
                    "text": "AddItemToUserListBrick: Adds a specified value to a list and stores it in numerical order. New inputs will be put at the end of the list."
                },
                "/bin/view/Documentation/BrickDocumentation/DeleteItemOfUserListBrick/": {
                    "text": "DeleteItemOfUserListBrick: Deletes an item from a specified list and position. Other items will move up in their list position."
                },
                "/bin/view/Documentation/BrickDocumentation/ClearUserListBrick/": {
                    "text": "ClearUserListBrick: Deletes all items from a specified list."
                },
                "/bin/view/Documentation/BrickDocumentation/InsertItemIntoUserListBrick/": {
                    "text": "InsertItemIntoUserListBrick: Inserts a new item into a specified list and position. Following items will move down one position."
                },
                "/bin/view/Documentation/BrickDocumentation/ReplaceItemInUserListBrick/": {
                    "text": "ReplaceItemInUserListBrick: Replaces one item on a specified position with a new item. The new item will take the position from the other one."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteListOnDeviceBrick/": {
                    "text": "WriteListOnDeviceBrick: Writes a specified list on the devices storage. This means that lists can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/ReadListFromDeviceBrick/": {
                    "text": "ReadListFromDeviceBrick: Reads a specified list from the devices storage. This means that lists can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/StoreCSVIntoUserListBrick/": {
                    "text": "StoreCSVIntoUserListBrick: Stores a specified column\u00a0of CSV\u00a0(comma-separated values) data\u00a0into a specified list. Every element of the specified column will be added as individual item into the list."
                },
                "/bin/view/Documentation/BrickDocumentation/WebRequestBrick/": {
                    "text": "WebRequestBrick: Sends a web request to a specified address (URL). Stores the answer in a specified variable."
                },
                "/bin/view/Documentation/BrickDocumentation/LookRequestBrick/": {
                    "text": "LookRequestBrick: Gets an image from a specified URL and uses it as current look for the object. Requires internet connection."
                },
                "/bin/view/Documentation/BrickDocumentation/BackgroundRequestBrick/": {
                    "text": "BackgroundRequestBrick: Gets an image from a specified URL and uses it as current background. Requires internet connection."
                },
                "/bin/view/Documentation/BrickDocumentation/AskBrick/": {
                    "text": "AskBrick: Asks a question within a dialog and stores the answer in a variable."
                },
                "/bin/view/Documentation/BrickDocumentation/AskSpeechBrick/": {
                    "text": "AskSpeechBrick: Speaks a phrase with a computer generated voice and stores the spoken answer, converted as text, in a variable. Requires an internet connection to convert."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Your-Bricks/": {
                "/bin/view/XWiki/admin": {},
                "/bin/view/Documentation/BrickDocumentation/Your-Bricks/Your%20Brick%20Examples/": {}
            },
            "/bin/view/Documentation/BrickDocumentation/Embroidery-Bricks/": {
                "/bin/view/XWiki/MichaelJ": {},
                "/bin/view/Education/Embroidery/": {
                    "text": "binviewEducationEmbroidery: On this page, you will find all the tutorials you need to start programming. We have both videos and step by step instructions for you.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/StitchBrick/": {
                    "text": "StitchBrick: Stitch lets the machine stitch into the fabric once. You will recognise this as a black point on your screen."
                },
                "/bin/view/Documentation/BrickDocumentation/RunningStitchBrick/": {
                    "text": "RunningStitchBrick: The running stitch activates a continous stitching as long as it is not stopped. Every time the machine is moved, it will stich at the specified length."
                },
                "/bin/view/Documentation/BrickDocumentation/ZigZagStitchBrick/": {
                    "text": "ZigZagStitchBrick: Starts a zigzag sitch with a specified length and width. The machine will then stitch continuously with every movement.\u00a0The zigzag stitch enables you to stitch thicker seams.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/TripleStitchBrick/": {
                    "text": "TripleStitchBrick: The triple stitch works the same as the running stitch, but it sews up every stitch three times. So it will move one\u00a0step back after the first stitch, stitch, and then move one step forward again."
                },
                "/bin/view/Documentation/BrickDocumentation/StopCurrentStitchBrick/": {
                    "text": "StopCurrentStitchBrick: If you start a continous stitch, like running, triple or zigzag stitch, it can only be stopped with this brick. This allows you e.g. to move the machine without stitching and then continue to stitch."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteEmbroideryToFileBrick/": {
                    "text": "WriteEmbroideryToFileBrick: Writes the programed embroidery file to a specified file. Embroidery patterns are created in the DST file format. You can then export this file to stitch with electronic stitching machines."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Lego-NXT-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/LegoNxtMotorTurnAngleBrick/": {
                    "text": "LegoNxtMotorTurnAngleBrick: Activates the selected motor(s) and stops the motor(s) again after it spun for the entered angle. It is possible to select each output-port separately or use the two output-ports B and C at the same time. The direction the motor(s) will spin is controlled by positive/negative values of the entered angle."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoNxtMotorStopBrick/": {
                    "text": "LegoNxtMotorStopBrick: Stops the movement of the selected motor(s). It is possible to select each output-port separately or use the two output-ports B and C or all output-ports at the same time."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoNxtMotorMoveBrick/": {
                    "text": "LegoNxtMotorMoveBrick: Activates the selected motor(s) and spins the motor(s) with the entered speed until a stop-command is issued to the motor(s). It is possible to select each output-port separately or use the two output-ports B and C at the same time. The direction the motor(s) will spin is controlled by positive/negative values of the entered speed."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoNxtPlayToneBrick/": {
                    "text": "LegoNxtPlayToneBrick: Plays a tone on the NXT brick for the entered duration in the entered frequency. The NXT brick supports frequencies between 200Hz and 14000Hz."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Lego-Ev3-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/LegoEv3MotorMoveBrick/": {
                    "text": "LegoEv3MotorMoveBrick: Activates the selected motor(s) and spins the motor(s) with the entered speed until a stop-command is issued to the motor(s). It is possible to select each output-port separately or use the two output-ports B and C at the same time. The direction the motor(s) will spin is controlled by positive/negative values of the entered speed."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoEv3MotorStopBrick/": {
                    "text": "LegoEv3MotorStopBrick: Stops the movement of the selected motor(s). It is possible to select each output-port separately or use the two output-ports B and C or all output-ports at the same time."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoEv3MotorTurnAngleBrick/": {
                    "text": "LegoEv3MotorTurnAngleBrick: Activates the selected motor(s) and stops the motor(s) again after it spun for the entered angle. It is possible to select each output-port separately or use the two output-ports B and C at the same time. The direction the motor(s) will spin is controlled by positive/negative values of the entered angle."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoEv3SetLedBrick/": {
                    "text": "LegoEv3SetLedBrick: Changes the color of the LEDs of the EV3 Brick. You can chose between the colors green, red and orange. For all three colors the options on, flashing or pulse are available. It is also possible to turn off the LEDs."
                },
                "/bin/view/Documentation/BrickDocumentation/LegoEv3PlayToneBrick/": {
                    "text": "LegoEv3PlayToneBrick: Plays a tone on the EV3 brick for the entered duration in the entered frequency. The EV3 brick supports frequencies between 200Hz and 10000Hz. The volume of the sound can be entered in percent."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/AR%20Drone/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/DroneTakeOffLandBrick/": {
                    "text": "DroneTakeOffLandBrick: Take off the drone and waits in the start position about one meter distance to the ground. This brick is necessary for the move, turn and flip bricks. If the drone is flying, this brick activates the landing on the ground."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneEmergencyBrick/": {
                    "text": "DroneEmergencyBrick: Turns off all motors and the drone switch over to emergency mode. In this mode the lights shine red and no other command can be executed. Attention in high altitude! After a restart the drone returns to normal flight mode."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveUpBrick/": {
                    "text": "DroneMoveUpBrick: Moves the drone up with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveDownBrick/": {
                    "text": "DroneMoveDownBrick: Moves the drone down with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveLeftBrick/": {
                    "text": "DroneMoveLeftBrick: Moves the drone left with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveRightBrick/": {
                    "text": "DroneMoveRightBrick: Moves the drone right with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveForwardBrick/": {
                    "text": "DroneMoveForwardBrick: Moves the drone forward with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneMoveBackwardBrick/": {
                    "text": "DroneMoveBackwardBrick: Moves the drone backward with the entered time and power. The percentage of the power with the value 100 is the maximum airspeed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneTurnLeftBrick/": {
                    "text": "DroneTurnLeftBrick: Turns the drone left with the entered time and power. While the drone turns, it stays in the same position. The percentage of the power with the value 100 is the maximum rotation velocity of the drone and the percentage downwards to the value 0 calculates the slower velocity."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneTurnRightBrick/": {
                    "text": "DroneTurnRightBrick: Turns the drone right with the entered time and power. While the drone turns, it stays in the same position. The percentage of the power with the value 100 is the maximum rotation velocity of the drone and the percentage downwards to the value 0 calculates the slower velocity."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneFlipBrick/": {
                    "text": "DroneFlipBrick: Flips the drone to the left and roll it around its own axis. After that, the drone returns back to the position where the brick was started."
                },
                "/bin/view/Documentation/BrickDocumentation/DronePlayLedAnimationBrick/": {
                    "text": "DronePlayLedAnimationBrick: The four LED lamps of the drone shine in different colors and animation modes. There are many different colors and animations, such as \"Green\", \"Red\", \"Blink Green\", \"Fire\". All these flash animations take five seconds."
                },
                "/bin/view/Documentation/BrickDocumentation/DroneSwitchCameraBrick/": {
                    "text": "DroneSwitchCameraBrick: Switches between the two drone cameras. The main camera shows the view to the front and the second camera to the ground. Additionally, choose from the \"Looks\" category the \"Set background (AR.Drone 2.0 video)\" brick to display the video from the drone camera."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Jumping%20Sumo%20Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoMoveForwardBrick/": {
                    "text": "JumpingSumoMoveForwardBrick: Moves the drone forward with the entered time and power. The percentage of the power with the value 100 is the maximum driving speed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoMoveBackwardBrick/": {
                    "text": "JumpingSumoMoveBackwardBrick: Moves the drone backward with the entered time and power. The percentage of the power with the value 100 is the maximum driving speed of the drone and the percentage downwards to the value 0 calculates the slower speed."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoAnimationsBrick/": {
                    "text": "JumpingSumoAnimationsBrick: The drone supports many different funny animations, such as \"Spin\", \"Slowshake\", \"Spinjump\"."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoSoundBrick/": {
                    "text": "JumpingSumoSoundBrick: Different sounds can be selected, like \"Normal\", \"Robot\", \"Insect\" and \"Monster\". If the sound is activated, the drone continues every other brick with this chosen sound and volume."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoNoSoundBrick/": {
                    "text": "JumpingSumoNoSoundBrick: Turns off the sound."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoJumpLongBrick/": {
                    "text": "JumpingSumoJumpLongBrick: The drone jumps forward and lands after a distance about one meter on the ground. In the upside down position, the drone can kick a ball."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoJumpHighBrick/": {
                    "text": "JumpingSumoJumpHighBrick: The drone jumps up about eighty centimeter and lands on the ground. In the upside down position, the drone can kick a ball."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoRotateLeftBrick/": {
                    "text": "JumpingSumoRotateLeftBrick: Turns the drone to the left with the entered degree measure."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoRotateRightBrick/": {
                    "text": "JumpingSumoRotateRightBrick: Turns the drone to the right with the entered degree measure."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoTurnBrick/": {
                    "text": "JumpingSumoTurnBrick: Flips the drone around its own axis and stays in the upside down position. In this position, the drone can also do all other bricks. If the drone is in the upside down position, this brick turns the drone to the normal driving position."
                },
                "/bin/view/Documentation/BrickDocumentation/JumpingSumoTakingPictureBrick/": {
                    "text": "JumpingSumoTakingPictureBrick: Takes a picture with the drone camera and stores it to the internal storage of your own device. This brick creates a new folder \"JumpingSumo\" in the general photo directory and stores all further pictures from the drone there."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Arduino-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/ArduinoSendDigitalValueBrick/": {
                    "text": "ArduinoSendDigitalValueBrick: Sets the specified Pin to the specified value. For this brick only the values 0 (false / low) and 1 (true / high) work, otherwise the brick has no effect."
                },
                "/bin/view/Documentation/BrickDocumentation/ArduinoSendPWMValueBrick/": {
                    "text": "ArduinoSendPWMValueBrick: Sets the specified Pin to the specified PWN duty cycle and frequency. More information on PWM can be found here."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Raspberry%20Pi-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/Raspberry%20Pi-Bricks/Connecting%20to%20the%20Pi/": {
                    "text": "Raspberry%20Pi-BricksConnecting%20to%20the%20Pi: Installing RaspberinoServer on your Raspberry PiFor the following steps, you either have to enter the following commands in the terminal of your Paspberry Pi using a keyboard and a display, or you can connect to your Raspberry Pi via SSH from your computer or phone."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenRaspiPinChangedBrick/": {
                    "text": "WhenRaspiPinChangedBrick: Waits until the specified Pin changes its state to the specified value and executes the script. High corresponds to the value 1 and low to the value 0."
                },
                "/bin/view/Documentation/BrickDocumentation/RaspiIfLogicBeginBrick/": {
                    "text": "RaspiIfLogicBeginBrick: Creates an if-else-query. If the specified Pin is true (a.k.a. high or 1) it will continue the script there, otherwise it will continue with the else-brick beneath."
                },
                "/bin/view/Documentation/BrickDocumentation/RaspiSendDigitalValueBrick/": {
                    "text": "RaspiSendDigitalValueBrick: Sets the specified Pin to the specified value. For this brick only the values 0 (false / low) and 1 (true / high) work, otherwise the brick has no effect."
                },
                "/bin/view/Documentation/BrickDocumentation/RaspiPwmBrick/": {
                    "text": "RaspiPwmBrick: Sets the specified Pin to the specified PWM duty cycle and frequency. More information on PWM can be found here."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Phiro-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/PhiroMotorMoveForwardBrick/": {
                    "text": "PhiroMotorMoveForwardBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/PhiroMotorMoveBackwardBrick/": {
                    "text": "PhiroMotorMoveBackwardBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/PhiroMotorStopBrick/": {
                    "text": "PhiroMotorStopBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/PhiroPlayToneBrick/": {
                    "text": "PhiroPlayToneBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/PhiroRGBLightBrick/": {
                    "text": "PhiroRGBLightBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/PhiroIfLogicBeginBrick/": {
                    "text": "PhiroIfLogicBeginBrick: Work In Progress"
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Testing-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/AssertEqualsBrick/": {
                    "text": "AssertEqualsBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/AssertUserListsBrick/": {
                    "text": "AssertUserListsBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/ParameterizedBrick/": {
                    "text": "ParameterizedBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/WaitTillIdleBrick/": {
                    "text": "WaitTillIdleBrick: Let\u2019s the script wait until all other scripts have stopped. This includes all script from all other objects. Scripts can be stopped through the stop\u00a0brick or when terminated by lack of further operations.\u00a0"
                },
                "/bin/view/Documentation/BrickDocumentation/TapAtBrick/": {
                    "text": "TapAtBrick: Simulates a single tap at a specified position of the touchscreen. This brick basically simulates your finger."
                },
                "/bin/view/Documentation/BrickDocumentation/TapForBrick/": {
                    "text": "TapForBrick: Simulates a touch at a specified position for a specified amount of time at your touchscreen. This brick basically simulates your finger and can be used for longer touches."
                },
                "/bin/view/Documentation/BrickDocumentation/FinishStageBrick/": {
                    "text": "FinishStageBrick: Work In Progress"
                },
                "/bin/view/Documentation/BrickDocumentation/StoreCSVIntoUserListBrick/": {
                    "text": "StoreCSVIntoUserListBrick: Stores a specified column\u00a0of CSV\u00a0(comma-separated values) data\u00a0into a specified list. Every element of the specified column will be added as individual item into the list."
                },
                "/bin/view/Documentation/BrickDocumentation/WebRequestBrick/": {
                    "text": "WebRequestBrick: Sends a web request to a specified address (URL). Stores the answer in a specified variable."
                }
            },
            "/bin/view/Documentation/BrickDocumentation/Device-Bricks/": {
                "/bin/view/XWiki/stephan": {},
                "/bin/view/Documentation/BrickDocumentation/WhenBrick/": {
                    "text": "WhenBrick: Runs the script when the object is tapped."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenTouchDownBrick/": {
                    "text": "WhenTouchDownBrick: Runs the script when the screen is touched."
                },
                "/bin/view/Documentation/BrickDocumentation/WhenNfcBrick/": {
                    "text": "WhenNfcBrick: Text"
                },
                "/bin/view/Documentation/BrickDocumentation/SetNfcTagBrick/": {
                    "text": "SetNfcTagBrick: Text"
                },
                "/bin/view/Documentation/BrickDocumentation/WebRequestBrick/": {
                    "text": "WebRequestBrick: Sends a web request to a specified address (URL). Stores the answer in a specified variable."
                },
                "/bin/view/Documentation/BrickDocumentation/LookRequestBrick/": {
                    "text": "LookRequestBrick: Gets an image from a specified URL and uses it as current look for the object. Requires internet connection."
                },
                "/bin/view/Documentation/BrickDocumentation/VibrationBrick/": {
                    "text": "VibrationBrick: Lets the phone vibrate for a specified time."
                },
                "/bin/view/Documentation/BrickDocumentation/SpeakBrick/": {
                    "text": "SpeakBrick: Speaks a phrase with a computer generated voice and continues with the next brick immediately."
                },
                "/bin/view/Documentation/BrickDocumentation/SpeakAndWaitBrick/": {
                    "text": "SpeakAndWaitBrick: Speaks a phrase with a computer generated voice and waits until it has ended before continuing with the next brick."
                },
                "/bin/view/Documentation/BrickDocumentation/AskSpeechBrick/": {
                    "text": "AskSpeechBrick: Speaks a phrase with a computer generated voice and stores the spoken answer, converted as text, in a variable. Requires an internet connection to convert."
                },
                "/bin/view/Documentation/BrickDocumentation/StartListeningBrick/": {
                    "text": "StartListeningBrick: Starts the voice recognition and stores the recognised words in the specified variable. The recognition will stop automatically if there is nothing spoken anymore."
                },
                "/bin/view/Documentation/BrickDocumentation/CameraBrick/": {
                    "text": "CameraBrick: Turns the camera on or off. By default the front camera will be activated. To change the camera, use the correlated brick."
                },
                "/bin/view/Documentation/BrickDocumentation/ChooseCameraBrick/": {
                    "text": "ChooseCameraBrick: Switches the camera to the front or back camera."
                },
                "/bin/view/Documentation/BrickDocumentation/FlashBrick/": {
                    "text": "FlashBrick: Switches the flashlight of the smartphone on or off. Does not work with the front camera."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteVariableOnDeviceBrick/": {
                    "text": "WriteVariableOnDeviceBrick: Stores the specified variable on the devices storage. This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/ReadVariableFromDeviceBrick/": {
                    "text": "ReadVariableFromDeviceBrick: Reads a specified variable\u00a0from the devices storage. This means that variables can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/WriteListOnDeviceBrick/": {
                    "text": "WriteListOnDeviceBrick: Writes a specified list on the devices storage. This means that lists can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/ReadListFromDeviceBrick/": {
                    "text": "ReadListFromDeviceBrick: Reads a specified list from the devices storage. This means that lists can be stored permanently, surviving the lifetime of the Pocket Code App and later can be recalled."
                },
                "/bin/view/Documentation/BrickDocumentation/TapAtBrick/": {
                    "text": "TapAtBrick: Simulates a single tap at a specified position of the touchscreen. This brick basically simulates your finger."
                },
                "/bin/view/Documentation/BrickDocumentation/TapForBrick/": {
                    "text": "TapForBrick: Simulates a touch at a specified position for a specified amount of time at your touchscreen. This brick basically simulates your finger and can be used for longer touches."
                }
            }
        },
        "/bin/view/Documentation/FormulaEditor/": {
            "text": "With the formula editor you have a very powerful calculator in front of you. It helps to express your thoughts in a way the computer can deal with.",
            "/bin/view/Documentation/FormulaEditor/Compute/": {
                "text": "With the 'Compute' button you can compute the given calculation and the result is shown."
            },
            "/bin/view/Documentation/FormulaEditor/Properties/": {
                "text": "With the 'Object' button you have access to different motion properties like 'position x', 'size', 'color' or 'transparency'."
            },
            "/bin/view/Documentation/FormulaEditor/Functions/": {
                "text": "With the 'Functions' button you can insert maths functions like 'round', 'pi' or the\u00a0'arctan(-1,0)' and much much more."
            },
            "/bin/view/Documentation/FormulaEditor/Logic/": {
                "text": "Here you can find all logical (boolean) operators which you will need."
            },
            "/bin/view/Documentation/FormulaEditor/TextFunctions/": {
                "text": "There are also 'Text' functions like 'length(hello world)'."
            },
            "/bin/view/Documentation/FormulaEditor/Lists/": {
                "text": "There are also 'List'\u00a0functions like 'number of items(*list name*)'."
            },
            "/bin/view/Documentation/FormulaEditor/Sensors/": {
                "text": "With the 'Sensors' button you can insert different device sensors, touch and face detection and date and time."
            },
            "/bin/view/Documentation/FormulaEditor/Data/": {
                "text": "In this section you can see all your Variables and add some new."
            }
        },
        "/bin/view/Documentation/How-To%27s/": {},
        "/bin/view/Documentation/Feature%20Tutorials/": {},
        "/bin/view/Documentation/Starter/": {},
        "/bin/view/Documentation/Beginners%20Course/": {},
        "/bin/view/Documentation/Game%20Design/": {},
        "/bin/view/Documentation/Chat%20and%20Forums/": {},
        "/bin/view/Documentation/Web%20requests/": {},
        "/bin/view/Documentation/AFirstGame/": {}
    }
}